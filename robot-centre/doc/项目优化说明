
已解决
    1.日志打印需打印tenantId，channelId，platformId，functionCode----------------------------->已完成
    2.登录：获取图片验证码 + 登录 必须使用同一个httpclient-------------------------------------->不做，没意义
    3.图片验证码的获取也放在function的Package包里面-------------------------------------------->已完成
    3.登录时候，如何保证在分布式条件下，所有的httpclient都会新建（刷新配置）---------------------->已完成
    5.机器人标志现在是无限期的，可以改进下，可以每次检查时更新下时间------------------------------>已完成
    6.由于redis宕机或项目突然挂了，导致机器人没有归还回来---------------------------------------->aof容灾备份，已完成
    7.function多级查询的时候，actionEnum还需要传过去，改进成根据本function自动获取--------------->已完成
    8.如果是登录的话，不要进行"是否掉线检查"，将错误原因直接返回---------------------------------->已完成
    9.源码级：访问二级域名的时候，没有带一级域名的cookie
        结果：修改源码怕出问题，暂时在登录的Function里面添加------------------------------------->已完成
    10.源码级：自动重定向没有生效，
        结果：DefaultRedirectStrategy不支持post方法，重新了判定重定向的方法---------------------->已完成
    11.源码级：HttpClient创建的时候指定了默认的RequestConfig,每个请求发起的时候，也可以指定RequestConfig，确认下是怎么覆盖的
        a.全部覆盖  b.有值时覆盖   答案：a

未解决
    1.ReactorImpl里面如何有多种异步任务在里面，就会出问题，比如除了打款还有其他种类的任务
    2.function调用function的时候，如果FunctionBase类里面的action获取报错，会导致机器人无法归还
    3.bbin掉线检查现在是失效的，进行优化



    15.httpclient工厂部分：
        1.连接池：
            a.连接（连接池）超时时间，单位：秒
            b.连接池：最大连接数
            c.连接池：每个路由并发数
            d.连接池：最大空闲连接数 is_expired_connection为1时生效
            e.连接池：是否过期连接 1有效  0无效
            f.连接池：是否过期连接 1有效  0无效
        2.设置keep-alive策略
        3.设置过期和空闲连接策略
        4.设置SSL检查策略

    16.功能部分：
        a.parse只做响应结果转换
        b.对响应的转换尽可能的详尽，比如 损失+收益+游戏明细+总额，一次性查询出来

    17.登录部分优化：
        a.机器人和其cookie分离存储，机器人令牌放队列，cookie放map
            可解决：拼多多第一次登录需要手机验证码，以后不用的情况，因为之前的cookie一直存在，不会消失
                强制下线时判断cookie是否需长久保存：
                    不需要的清除（比如：所有的包网平台）
                    需要的只清除队列令牌（比如拼多多等）
            可解决：获取指定机器人去做事
                联通销卡需指定机器人
                GPK登录后，短信的二次校验（OPT同理）
        b.每次cookie时判断是否过期
        c.登录成功后手动将机器人纳入，防止二次校验后才真正登录成功的情况
        d.登录的所有接口不需要掉线检查
        f.登录后的特殊的token放入cookie的property

    18.调度部分:
        a.选择机器人
            解决：
                同一机器人10秒不能再次打款
                同一个ip 10秒不能再次打款
                同一个会员账号10秒不能再次打款

        b.选择function
        c.同步任务和异步任务集中处理
            同步：正常调用
            异步：
                IO多路复用异步模型（非阻塞异步）
                令牌队列使用redis新特性：跳表增加了pop功能（待定）

    19.执行部分：
        前拦截：
            a.代理ip（实现类自定义：接口+数据库配置：机器人）
            b.尝试次数
            c.是否重定向
            d.获取URL、获取请求方式、获取全局请求头
            e.token、特定接口参数、特定接口头
            f.用户行为追踪（通过实现类自定义）
            g.请求参数加载：
                是否重定向
                获取连接超时
                建立连接超时
                响应超时
                cookie策略
            h.请求日志
        后拦截：
            a.响应日志
            b.判断是否掉线（通过实现类自定义，有值则处理）
            c.请求结果转换
                完全自定义：下载等
                二进制格式：图片验证码
                字符串格式：html、json

    19.机器人管理
        a.令牌入队列、cookie入map
        b.获取机器人的方式
            1.获取机器人使用ID
                解决：登录有多次调用，需对同一个cookie进行
                解决：指定机器人处理任务
            2.获取机器人使用令牌队列轮询
                解决：正常调用时，应使用轮询形式
        c.强制下线
            方式一：删除map里面的cookie，删除令牌
            方式二：只删除令牌，map里的cookie待用

