spring:
  application:
    name: robot-xinhao-server
  cloud:
    refresh:
      refreshable: none #防止循环依赖
  jackson:
    default-property-inclusion: non_null #不返回空值和null
  redis:
    host: redis.com
    password: admin1234
    port: 6379
    timeout: 5000 #连接超时 毫秒
    database: 0
    jedis:
      pool:
        maxActive: 3
        maxIdle: 3
        minIdle: 1
        maxWait: -1 #连接池最大等行时间 -1没有限制
  datasource:
    username: root
    password: '0PKpK0JJD?mM'
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://database.com/robot_og?characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
    hikari:
      minimum-idle: 5
      maximum-pool-size: 500
      auto-commit: true
      idle-timeout: 30000
      pool-name: DatebookHikariCP
      max-lifetime: 1800000
      connection-timeout: 10000
  rabbitmq:
    #    host: dev.rabbitmq.com
    #    port: 5672
    username: user_admin
    password: admin123456
    publisher-returns: true
    publisher-confirms: true
    listener:
      direct:
        acknowledge-mode: manual
      simple:
        acknowledge-mode: manual
        enabled: true #是否开启消费者重试（为false时关闭消费者重试，这时消费端代码异常会一直重复收到消息）
        max-attempts: 1    #最大重试次数
        initial-interval: 5000  #重试间隔时间（单位毫秒）
        max-interval: 1200000 #重试最大时间间隔（单位毫秒）
        multiplier: 5 #应用于前一重试间隔的乘法器
    cache:
      channel:
        size: 500
    addresses: node1:5672 , node2:5672 , node3:5672

server:
  port: 8086
  servlet:
    context-path: /xinhaoRobot

eureka:
  instance:
    lease-renewal-interval-in-seconds: 200
    lease-expiration-duration-in-seconds: 300
    registry-fetch-interval-seconds: 200 # Eureka Client缓存的定期更新周期
    prefer-ip-address: true
  client:
    #表示是否将自己注册到Eureka Server，默认为true。测试环境下关闭注册，都在热部署会报错
    #    register-with-eureka: false
    #表示是否从Eureka Server获取注册信息，默认为true。
    #    fetch-registry: false
    serviceUrl:
      defaultZone: http://eureka.com:8761/eureka

ribbon:
  ServerListRefreshInterval: 2  # ribbon cache时间
  MaxAutoRetries: 2 #最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试
  MaxAutoRetriesNextServer: 3 #切换实例的重试次数
  OkToRetryOnAllOperations: false  #对所有操作请求都进行重试，如果是get则可以，如果是post，put等操作没有实现幂等的情况下是很危险的,所以设置为false
  ConnectTimeout: 5000  #请求连接的超时时间
  ReadTimeout: 6000 #请求处理的超时时间

#不检查长令牌的URL

PERMIT_URL: /** #测试放行

#日志文件路径
logging:
  config: classpath:log4j2-dev.xml


# 响应文本存放根路径
html:
  output:
    root: e:html/